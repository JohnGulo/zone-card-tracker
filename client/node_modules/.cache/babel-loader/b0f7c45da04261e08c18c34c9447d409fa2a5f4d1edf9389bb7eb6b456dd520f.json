{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Johnny G\\\\zone-card-tracker\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend);\nexport default function App() {\n  _s();\n  const [cardName, setCardName] = useState('');\n  const [prices, setPrices] = useState([]);\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(false);\n  const mockPrices = [4.99, 5.99, 6.49, 7.00, 5.25, 6.10];\n  const handleGenerate = async () => {\n    if (!cardName) return;\n    setLoading(true);\n    setSummary('');\n    setPrices([]);\n    try {\n      // Step 1: Fetch listings from your backend\n      const searchRes = await fetch('http://localhost:5000/api/search?cardName=' + encodeURIComponent(cardName));\n      const searchData = await searchRes.json();\n      const extractedPrices = searchData.listings.map(item => parseFloat(item.price)).filter(price => !isNaN(price));\n      setPrices(extractedPrices);\n\n      // Step 2: Send prices to OpenAI summary endpoint\n      const summaryRes = await fetch('http://localhost:5000/api/generate-summary', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cardName,\n          prices: extractedPrices\n        })\n      });\n      const summaryData = await summaryRes.json();\n      setSummary(summaryData.summary || 'No summary returned.');\n    } catch (err) {\n      console.error('Error:', err);\n      setSummary('Something went wrong. Please try again.');\n    }\n    setLoading(false);\n  };\n  const chartData = {\n    labels: prices.map((_, i) => `Listing ${i + 1}`),\n    datasets: [{\n      label: 'Price ($)',\n      data: prices,\n      borderColor: 'teal',\n      backgroundColor: 'lightblue',\n      tension: 0.3\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Card Pricing Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter card name\",\n      value: cardName,\n      onChange: e => setCardName(e.target.value),\n      style: {\n        width: '100%',\n        padding: '10px',\n        marginBottom: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      style: {\n        padding: '10px 20px'\n      },\n      children: \"Generate AI Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), prices.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          backgroundColor: '#eef',\n          padding: '15px',\n          borderRadius: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"AI-Powered Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Generating summary...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RLkLJFiMO4tzZMmlAxRkgo6m1jI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Line","Chart","ChartJS","LineElement","PointElement","LinearScale","Title","CategoryScale","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","App","_s","cardName","setCardName","prices","setPrices","summary","setSummary","loading","setLoading","mockPrices","handleGenerate","searchRes","fetch","encodeURIComponent","searchData","json","extractedPrices","listings","map","item","parseFloat","price","filter","isNaN","summaryRes","method","headers","body","JSON","stringify","summaryData","err","console","error","chartData","labels","_","i","datasets","label","data","borderColor","backgroundColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","style","width","padding","marginBottom","onClick","length","marginTop","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Johnny G/zone-card-tracker/client/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  PointElement,\n  LinearScale,\n  Title,\n  CategoryScale,\n  Tooltip,\n  Legend\n} from 'chart.js';\n\nChartJS.register(LineElement, PointElement, LinearScale, Title, CategoryScale, Tooltip, Legend);\n\nexport default function App() {\n  const [cardName, setCardName] = useState('');\n  const [prices, setPrices] = useState([]);\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const mockPrices = [4.99, 5.99, 6.49, 7.00, 5.25, 6.10];\n\n  const handleGenerate = async () => {\n  if (!cardName) return;\n\n  setLoading(true);\n  setSummary('');\n  setPrices([]);\n\n  try {\n    // Step 1: Fetch listings from your backend\n    const searchRes = await fetch('http://localhost:5000/api/search?cardName=' + encodeURIComponent(cardName));\n    const searchData = await searchRes.json();\n\n    const extractedPrices = searchData.listings\n      .map(item => parseFloat(item.price))\n      .filter(price => !isNaN(price));\n\n    setPrices(extractedPrices);\n\n    // Step 2: Send prices to OpenAI summary endpoint\n    const summaryRes = await fetch('http://localhost:5000/api/generate-summary', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ cardName, prices: extractedPrices })\n    });\n\n    const summaryData = await summaryRes.json();\n    setSummary(summaryData.summary || 'No summary returned.');\n  } catch (err) {\n    console.error('Error:', err);\n    setSummary('Something went wrong. Please try again.');\n  }\n\n  setLoading(false);\n};\n\n\n  const chartData = {\n    labels: prices.map((_, i) => `Listing ${i + 1}`),\n    datasets: [{\n      label: 'Price ($)',\n      data: prices,\n      borderColor: 'teal',\n      backgroundColor: 'lightblue',\n      tension: 0.3\n    }]\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Card Pricing Tool</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter card name\"\n        value={cardName}\n        onChange={(e) => setCardName(e.target.value)}\n        style={{ width: '100%', padding: '10px', marginBottom: '10px' }}\n      />\n      <button onClick={handleGenerate} style={{ padding: '10px 20px' }}>\n        Generate AI Summary\n      </button>\n\n      {prices.length > 0 && (\n        <>\n          <div style={{ marginTop: '30px' }}>\n            <Line data={chartData} />\n          </div>\n\n          <div style={{ marginTop: '20px', backgroundColor: '#eef', padding: '15px', borderRadius: '5px' }}>\n            <h3>AI-Powered Summary:</h3>\n            {loading ? <p>Generating summary...</p> : <p>{summary}</p>}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}